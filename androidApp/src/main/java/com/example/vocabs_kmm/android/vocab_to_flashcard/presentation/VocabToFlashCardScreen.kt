package com.example.vocabs_kmm.android.vocab_to_flashcard.presentation

import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.material.MaterialTheme
import androidx.compose.material.Scaffold
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import com.example.vocabs_kmm.android.core.presentation.theme.VocabsTheme
import com.example.vocabs_kmm.android.vocab_to_flashcard.presentation.components.ExamplePhraseComponent
import com.example.vocabs_kmm.android.vocab_to_flashcard.presentation.components.VocabInputFieldBox
import com.example.vocabs_kmm.vocab_to_flashcard.domain.vocab_to_phrase.ExamplePhrase
import com.example.vocabs_kmm.vocab_to_flashcard.presentation.VocabToFlashcardEvent
import com.example.vocabs_kmm.vocab_to_flashcard.presentation.VocabToFlashcardState

@Composable
fun VocabToFlashcardScreen(state: VocabToFlashcardState, onEvent: (VocabToFlashcardEvent) -> Unit) {
    Scaffold(backgroundColor = MaterialTheme.colors.background) { paddingValues ->
        Column(
            modifier = Modifier
                .padding(paddingValues)
                .fillMaxSize()
        ) {
            Image(
                painter = painterResource(id = com.example.vocabs_kmm.android.R.drawable.img),
                contentDescription = "placeholder_image",
                modifier = Modifier.fillMaxHeight(0.25f),
                contentScale = ContentScale.FillWidth
            )
            ExamplePhraseComponent(
                modifier = Modifier
                    .fillMaxWidth()
                    .fillMaxHeight(0.41f),
                onEvent = onEvent,
                state = state
            )

            VocabInputFieldBox(
                modifier = Modifier
                    .fillMaxWidth()
                    .fillMaxHeight(0.8f),
                onEvent = onEvent,
                state = state
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
fun VocabToFlashcardScreenPreview() {
    VocabsTheme(darkTheme = true) {
        VocabToFlashcardScreen(
            state = VocabToFlashcardState(phrase = ExamplePhrase(beforeVocab = "This is an ", vocab = "example", afterVocab = " that explains a word and was generated by ai.")),
            onEvent = {})
    }
}


