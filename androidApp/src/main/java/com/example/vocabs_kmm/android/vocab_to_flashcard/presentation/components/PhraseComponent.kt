package com.example.vocabs_kmm.android.vocab_to_flashcard.presentation.components

import androidx.compose.animation.AnimatedContent
import androidx.compose.animation.ExperimentalAnimationApi
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.size
import androidx.compose.material.CircularProgressIndicator
import androidx.compose.material.MaterialTheme
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.vocabs_kmm.android.core.presentation.theme.VocabsTheme
import com.example.vocabs_kmm.vocab_to_flashcard.domain.vocab_to_phrase.ExamplePhrase
import com.example.vocabs_kmm.vocab_to_flashcard.presentation.VocabToFlashcardEvent
import com.example.vocabs_kmm.vocab_to_flashcard.presentation.VocabToFlashcardState

@OptIn(ExperimentalAnimationApi::class)
@Composable
fun ExamplePhraseComponent(
    modifier: Modifier,
    onEvent: (VocabToFlashcardEvent) -> Unit,
    state: VocabToFlashcardState
) {
    AnimatedContent(targetState = state.isGenerating, label = "") { isGenerating ->
        Box(
            modifier = modifier
        ) {

            if (isGenerating) {
                Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
                    CircularProgressIndicator(
                        modifier = Modifier.size(30.dp),
                        color = MaterialTheme.colors.onBackground
                    )
                }

            } else {
                PhraseTextBoxWithCurvedBottomEdge(
                    modifier = Modifier
                        .fillMaxWidth()
                        .fillMaxHeight(0.8f),
                    phrase = state.phrase ?: ExamplePhrase("", "", "")
                )
                PhraseButtonsRow(onEvent = onEvent, state = state)
            }
        }

    }


}


@Preview
@Composable
fun ExamplePhraseComponentPreview() {
    VocabsTheme(darkTheme = true) {
        Box(modifier = Modifier.fillMaxSize()){
            ExamplePhraseComponent(
                modifier = Modifier
                    .fillMaxWidth()
                    .fillMaxHeight(0.4f),
                onEvent = {},
                state = VocabToFlashcardState(phrase = ExamplePhrase(beforeVocab = "This is an ", vocab = "example", afterVocab = " that explains a word and was generated by ai."))
            )
        }

    }
}